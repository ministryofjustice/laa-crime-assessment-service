plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'com.adarshr.test-logger' version '4.0.0'
    id "com.github.ben-manes.versions" version "0.52.0"
    id 'jacoco'
    id 'com.diffplug.spotless' version '7.0.3'
}

group = "uk.gov.justice.laa.crime"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springModulithVersion', "1.3.5")
}

dependencies {
    // Alignment for all Spring Boot and Spring Modulith dependencies
    implementation platform("org.springframework.boot:spring-boot-dependencies:3.4.5")
    implementation platform("org.springframework.modulith:spring-modulith-bom:1.3.5")
    
    // Spring Modulith
    implementation 'org.springframework.modulith:spring-modulith-starter-core'
    implementation 'org.springframework.modulith:spring-modulith-docs'
    implementation 'org.springframework.modulith:spring-modulith-actuator'
    
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.modulith:spring-modulith-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    
    compileOnly 'org.projectlombok:lombok:1.18.38'
    
    annotationProcessor 'org.projectlombok:lombok:1.18.38'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test
    doLast {
        def reportPath = reports.html.outputLocation.get().asFile.absolutePath
        println("JaCoCo report available at: file://$reportPath/index.html")
    }
}

spotless {
    java {
        target project.fileTree(project.rootDir) {
            include 'src/main/java/**/*.java', 'src/test/java/**/*.java'
            exclude '**/build/**'
        }
        importOrder()
        removeUnusedImports()
        cleanthat().sourceCompatibility('21')
        googleJavaFormat().aosp()
        formatAnnotations()
    }
}
